<?php /* @var $this Mage_Catalog_Block_Product_View_Type_Configurable */ ?>
<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */
?>

<?php
$_product    = $this->getProduct();
$_attributes = Mage::helper('core')->decorateArray($this->getAllowAttributes());
?>
<?php if ($_product->isSaleable() && count($_attributes)):?>
    <dl>
    <?php foreach($_attributes as $_attribute): ?>
        <?php /*
            <dt><label class="required"><em>*</em><?php echo $_attribute->getLabel() ?></label></dt>
        */ ?>
        <dd<?php if ($_attribute->decoratedIsLast){?> class="last"<?php }?>>
            <div class="input-box">
                <select data-defvalue="<?php echo $this->__('%s', $_attribute->getLabel()) ?>" name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="required-entry super-attribute-select">
                    <option><?php echo $this->__('%s', $_attribute->getLabel()) ?></option>
                </select>
            </div>
        </dd>
    <?php endforeach; ?>
    </dl>
    <script type="text/javascript">
    //<![CDATA[
        var spConfig = new Product.Config(<?php echo $this->getJsonConfig() ?>);
        jQuery('.super-attribute-select').customSelect();

        //super_attribute_fix (refresh custom selects)
        Product.Config.prototype.fillSelect_orig = Product.Config.prototype.fillSelect;
        Product.Config.prototype.fillSelect = function(element){
            Product.Config.prototype.fillSelect_orig.apply(this, arguments);
            //alert(element.config.code);
            jQuery(element).customSelectRefresh();
        };
    //]]>
    </script>
<?php endif;?>
